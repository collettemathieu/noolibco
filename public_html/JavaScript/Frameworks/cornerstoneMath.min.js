/*! cornerstoneMath - v0.1.2 - 2015-08-31 | (c) 2014 Chris Hafey | https://github.com/chafey/cornerstoneMath */
var cornerstoneMath=(function(a){if(a===undefined){a={}}a.Vector3=function(b,d,c){this.x=b||0;this.y=d||0;this.z=c||0};a.Vector3.prototype={constructor:a.Vector3,set:function(b,d,c){this.x=b;this.y=d;this.z=c;return this},setX:function(b){this.x=b;return this},setY:function(b){this.y=b;return this},setZ:function(b){this.z=b;return this},setComponent:function(b,c){switch(b){case 0:this.x=c;break;case 1:this.y=c;break;case 2:this.z=c;break;default:throw new Error("index is out of range: "+b)}},getComponent:function(b){switch(b){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+b)}},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;return this},add:function(c,b){if(b!==undefined){console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead.");return this.addVectors(c,b)}this.x+=c.x;this.y+=c.y;this.z+=c.z;return this},addScalar:function(b){this.x+=b;this.y+=b;this.z+=b;return this},addVectors:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;this.z=d.z+c.z;return this},sub:function(c,b){if(b!==undefined){console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead.");return this.subVectors(c,b)}this.x-=c.x;this.y-=c.y;this.z-=c.z;return this},subVectors:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;this.z=d.z-c.z;return this},multiply:function(c,b){if(b!==undefined){console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.");return this.multiplyVectors(c,b)}this.x*=c.x;this.y*=c.y;this.z*=c.z;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;this.z*=b;return this},multiplyVectors:function(d,c){this.x=d.x*c.x;this.y=d.y*c.y;this.z=d.z*c.z;return this},applyAxisAngle:function(){var b;return function(c,d){if(b===undefined){b=new a.Quaternion()}this.applyQuaternion(b.setFromAxisAngle(c,d));return this}}(),applyMatrix3:function(c){var b=this.x;var g=this.y;var f=this.z;var d=c.elements;this.x=d[0]*b+d[3]*g+d[6]*f;this.y=d[1]*b+d[4]*g+d[7]*f;this.z=d[2]*b+d[5]*g+d[8]*f;return this},applyMatrix4:function(c){var b=this.x,g=this.y,f=this.z;var d=c.elements;this.x=d[0]*b+d[4]*g+d[8]*f+d[12];this.y=d[1]*b+d[5]*g+d[9]*f+d[13];this.z=d[2]*b+d[6]*g+d[10]*f+d[14];return this},applyProjection:function(c){var b=this.x,i=this.y,h=this.z;var f=c.elements;var g=1/(f[3]*b+f[7]*i+f[11]*h+f[15]);this.x=(f[0]*b+f[4]*i+f[8]*h+f[12])*g;this.y=(f[1]*b+f[5]*i+f[9]*h+f[13])*g;this.z=(f[2]*b+f[6]*i+f[10]*h+f[14])*g;return this},applyQuaternion:function(b){var m=this.x;var l=this.y;var k=this.z;var i=b.x;var h=b.y;var g=b.z;var j=b.w;var e=j*m+h*k-g*l;var d=j*l+g*m-i*k;var c=j*k+i*l-h*m;var f=-i*m-h*l-g*k;this.x=e*j+f*-i+d*-g-c*-h;this.y=d*j+f*-h+c*-i-e*-g;this.z=c*j+f*-g+e*-h-d*-i;return this},transformDirection:function(c){var b=this.x,g=this.y,f=this.z;var d=c.elements;this.x=d[0]*b+d[4]*g+d[8]*f;this.y=d[1]*b+d[5]*g+d[9]*f;this.z=d[2]*b+d[6]*g+d[10]*f;this.normalize();return this},divide:function(b){this.x/=b.x;this.y/=b.y;this.z/=b.z;return this},divideScalar:function(c){if(c!==0){var b=1/c;this.x*=b;this.y*=b;this.z*=b}else{this.x=0;this.y=0;this.z=0}return this},min:function(b){if(this.x>b.x){this.x=b.x}if(this.y>b.y){this.y=b.y}if(this.z>b.z){this.z=b.z}return this},max:function(b){if(this.x<b.x){this.x=b.x}if(this.y<b.y){this.y=b.y}if(this.z<b.z){this.z=b.z}return this},clamp:function(c,b){if(this.x<c.x){this.x=c.x}else{if(this.x>b.x){this.x=b.x}}if(this.y<c.y){this.y=c.y}else{if(this.y>b.y){this.y=b.y}}if(this.z<c.z){this.z=c.z}else{if(this.z>b.z){this.z=b.z}}return this},clampScalar:(function(){var c,b;return function(d,e){if(c===undefined){c=new a.Vector3();b=new a.Vector3()}c.set(d,d,d);b.set(e,e,e);return this.clamp(c,b)}})(),floor:function(){this.x=Math.floor(this.x);this.y=Math.floor(this.y);this.z=Math.floor(this.z);return this},ceil:function(){this.x=Math.ceil(this.x);this.y=Math.ceil(this.y);this.z=Math.ceil(this.z);return this},round:function(){this.x=Math.round(this.x);this.y=Math.round(this.y);this.z=Math.round(this.z);return this},roundToZero:function(){this.x=(this.x<0)?Math.ceil(this.x):Math.floor(this.x);this.y=(this.y<0)?Math.ceil(this.y):Math.floor(this.y);this.z=(this.z<0)?Math.ceil(this.z):Math.floor(this.z);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(b){return this.x*b.x+this.y*b.y+this.z*b.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(b){var c=this.length();if(c!==0&&b!==c){this.multiplyScalar(b/c)}return this},lerp:function(b,c){this.x+=(b.x-this.x)*c;this.y+=(b.y-this.y)*c;this.z+=(b.z-this.z)*c;
return this},cross:function(d,c){if(c!==undefined){console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.");return this.crossVectors(d,c)}var b=this.x,f=this.y,e=this.z;this.x=f*d.z-e*d.y;this.y=e*d.x-b*d.z;this.z=b*d.y-f*d.x;return this},crossVectors:function(d,c){var h=d.x,f=d.y,e=d.z;var j=c.x,i=c.y,g=c.z;this.x=f*g-e*i;this.y=e*j-h*g;this.z=h*i-f*j;return this},projectOnVector:function(){var c,b;return function(d){if(c===undefined){c=new a.Vector3()}c.copy(d).normalize();b=this.dot(c);return this.copy(c).multiplyScalar(b)}}(),projectOnPlane:function(){var b;return function(c){if(b===undefined){b=new a.Vector3()}b.copy(this).projectOnVector(c);return this.sub(b)}}(),reflect:function(){var b;return function(c){if(b===undefined){b=new a.Vector3()}return this.sub(b.copy(c).multiplyScalar(2*this.dot(c)))}}(),angleTo:function(b){var c=this.dot(b)/(this.length()*b.length());return Math.acos(a.clamp(c,-1,1))},distanceTo:function(b){return Math.sqrt(this.distanceToSquared(b))},distanceToSquared:function(e){var d=this.x-e.x;var c=this.y-e.y;var b=this.z-e.z;return d*d+c*c+b*b},setEulerFromRotationMatrix:function(c,b){console.error("REMOVED: Vector3's setEulerFromRotationMatrix has been removed in favor of Euler.setFromRotationMatrix(), please update your code.")},setEulerFromQuaternion:function(c,b){console.error("REMOVED: Vector3's setEulerFromQuaternion: has been removed in favor of Euler.setFromQuaternion(), please update your code.")},getPositionFromMatrix:function(b){console.warn("DEPRECATED: Vector3's .getPositionFromMatrix() has been renamed to .setFromMatrixPosition(). Please update your code.");return this.setFromMatrixPosition(b)},getScaleFromMatrix:function(b){console.warn("DEPRECATED: Vector3's .getScaleFromMatrix() has been renamed to .setFromMatrixScale(). Please update your code.");return this.setFromMatrixScale(b)},getColumnFromMatrix:function(c,b){console.warn("DEPRECATED: Vector3's .getColumnFromMatrix() has been renamed to .setFromMatrixColumn(). Please update your code.");return this.setFromMatrixColumn(c,b)},setFromMatrixPosition:function(b){this.x=b.elements[12];this.y=b.elements[13];this.z=b.elements[14];return this},setFromMatrixScale:function(b){var e=this.set(b.elements[0],b.elements[1],b.elements[2]).length();var d=this.set(b.elements[4],b.elements[5],b.elements[6]).length();var c=this.set(b.elements[8],b.elements[9],b.elements[10]).length();this.x=e;this.y=d;this.z=c;return this},setFromMatrixColumn:function(c,b){var e=c*4;var d=b.elements;this.x=d[e];this.y=d[e+1];this.z=d[e+2];return this},equals:function(b){return((b.x===this.x)&&(b.y===this.y)&&(b.z===this.z))},fromArray:function(b){this.x=b[0];this.y=b[1];this.z=b[2];return this},toArray:function(){return[this.x,this.y,this.z]},clone:function(){return new a.Vector3(this.x,this.y,this.z)}};return a}(cornerstoneMath));var cornerstoneMath=(function(a){if(a===undefined){a={}}a.Line3=function(c,b){this.start=(c!==undefined)?c:new a.Vector3();this.end=(b!==undefined)?b:new a.Vector3()};a.Line3.prototype={constructor:a.Line3,set:function(c,b){this.start.copy(c);this.end.copy(b);return this},copy:function(b){this.start.copy(b.start);this.end.copy(b.end);return this},center:function(c){var b=c||new a.Vector3();return b.addVectors(this.start,this.end).multiplyScalar(0.5)},delta:function(c){var b=c||new a.Vector3();return b.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(d,c){var b=c||new a.Vector3();return this.delta(b).multiplyScalar(d).add(this.start)},closestPointToPointParameter:function(){var c=new a.Vector3();var b=new a.Vector3();return function(d,h){c.subVectors(d,this.start);b.subVectors(this.end,this.start);var g=b.dot(b);var f=b.dot(c);var e=f/g;if(h){e=a.Math.clamp(e,0,1)}return e}}(),closestPointToPoint:function(c,f,e){var d=this.closestPointToPointParameter(c,f);var b=e||new a.Vector3();return this.delta(b).multiplyScalar(d).add(this.start)},applyMatrix4:function(b){this.start.applyMatrix4(b);this.end.applyMatrix4(b);return this},equals:function(b){return b.start.equals(this.start)&&b.end.equals(this.end)},clone:function(){return new a.Line3().copy(this)},intersectLine:function(j){var i=this.end.clone().sub(this.start);var g=j.end.clone().sub(j.start);var f=j.start.clone().sub(this.start);var e=i.clone().cross(g);var c=f.clone().cross(g);if(f.dot(i)===0){return}var h=c.dot(e)/e.lengthSq();if(h>1||isNaN(h)){return}var b=this.start.clone().add(i.clone().multiplyScalar(h));var d=b.clone().sub(j.start).lengthSq()+b.clone().sub(j.end).lengthSq();if(d<=j.distanceSq()){return b}return}};return a}(cornerstoneMath));var cornerstoneMath=(function(e){if(e===undefined){e={}}function b(f){return f*f}function c(g,f){return b(g.x-f.x)+b(g.y-f.y)}function a(i,g){var f=c(i.start,i.end);if(f===0){return c(g,i.start)}var h=((g.x-i.start.x)*(i.end.x-i.start.x)+(g.y-i.start.y)*(i.end.y-i.start.y))/f;
if(h<0){return c(g,i.start)}if(h>1){return c(g,i.end)}var j={x:i.start.x+h*(i.end.x-i.start.x),y:i.start.y+h*(i.end.y-i.start.y)};return c(g,j)}function d(g,f){return Math.sqrt(a(g,f))}e.lineSegment={distanceToPoint:d};return e}(cornerstoneMath));var cornerstoneMath=(function(d){if(d===undefined){d={}}function c(f,g,e){return(f<g)?g:((f>e)?e:f)}function a(f){var e=Math.PI/180;return f*e}function b(e){var f=180/Math.PI;return e*f}d.clamp=c;d.degToRad=a;d.radToDeg=b;return d}(cornerstoneMath));var cornerstoneMath=(function(b){if(b===undefined){b={}}b.Matrix4=function a(p,o,m,k,h,g,f,e,c,s,r,q,n,l,j,i){this.elements=new Float32Array(16);var d=this.elements;d[0]=(p!==undefined)?p:1;d[4]=o||0;d[8]=m||0;d[12]=k||0;d[1]=h||0;d[5]=(g!==undefined)?g:1;d[9]=f||0;d[13]=e||0;d[2]=c||0;d[6]=s||0;d[10]=(r!==undefined)?r:1;d[14]=q||0;d[3]=n||0;d[7]=l||0;d[11]=j||0;d[15]=(i!==undefined)?i:1};b.Matrix4.prototype.makeRotationFromQuaternion=function(n){var g=this.elements;var j=n.x,i=n.y,h=n.z,k=n.w;var p=j+j,c=i+i,l=h+h;var f=j*p,e=j*c,d=j*l;var o=i*c,m=i*l,t=h*l;var u=k*p,s=k*c,r=k*l;g[0]=1-(o+t);g[4]=e-r;g[8]=d+s;g[1]=e+r;g[5]=1-(f+t);g[9]=m-u;g[2]=d-s;g[6]=m+u;g[10]=1-(f+o);g[3]=0;g[7]=0;g[11]=0;g[12]=0;g[13]=0;g[14]=0;g[15]=1;return this};b.Matrix4.prototype.multiplyMatrices=function(M,L){var s=M.elements;var K=L.elements;var c=this.elements;var p=s[0],n=s[4],m=s[8],l=s[12];var J=s[1],I=s[5],H=s[9],G=s[13];var B=s[2],A=s[6],z=s[10],y=s[14];var t=s[3],r=s[7],q=s[11],o=s[15];var i=K[0],g=K[4],e=K[8],d=K[12];var F=K[1],E=K[5],D=K[9],C=K[13];var x=K[2],w=K[6],v=K[10],u=K[14];var k=K[3],j=K[7],h=K[11],f=K[15];c[0]=p*i+n*F+m*x+l*k;c[4]=p*g+n*E+m*w+l*j;c[8]=p*e+n*D+m*v+l*h;c[12]=p*d+n*C+m*u+l*f;c[1]=J*i+I*F+H*x+G*k;c[5]=J*g+I*E+H*w+G*j;c[9]=J*e+I*D+H*v+G*h;c[13]=J*d+I*C+H*u+G*f;c[2]=B*i+A*F+z*x+y*k;c[6]=B*g+A*E+z*w+y*j;c[10]=B*e+A*D+z*v+y*h;c[14]=B*d+A*C+z*u+y*f;c[3]=t*i+r*F+q*x+o*k;c[7]=t*g+r*E+q*w+o*j;c[11]=t*e+r*D+q*v+o*h;c[15]=t*d+r*C+q*u+o*f;return this};b.Matrix4.prototype.multiply=function(c,d){if(d!==undefined){console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.");return this.multiplyMatrices(c,d)}return this.multiplyMatrices(this,c)};b.Matrix4.prototype.getInverse=function(t,j){var i=this.elements;var y=t.elements;var r=y[0],p=y[4],n=y[8],k=y[12];var x=y[1],w=y[5],v=y[9],u=y[13];var f=y[2],e=y[6],d=y[10],c=y[14];var s=y[3],q=y[7],o=y[11],l=y[15];i[0]=v*c*q-u*d*q+u*e*o-w*c*o-v*e*l+w*d*l;i[4]=k*d*q-n*c*q-k*e*o+p*c*o+n*e*l-p*d*l;i[8]=n*u*q-k*v*q+k*w*o-p*u*o-n*w*l+p*v*l;i[12]=k*v*e-n*u*e-k*w*d+p*u*d+n*w*c-p*v*c;i[1]=u*d*s-v*c*s-u*f*o+x*c*o+v*f*l-x*d*l;i[5]=n*c*s-k*d*s+k*f*o-r*c*o-n*f*l+r*d*l;i[9]=k*v*s-n*u*s-k*x*o+r*u*o+n*x*l-r*v*l;i[13]=n*u*f-k*v*f+k*x*d-r*u*d-n*x*c+r*v*c;i[2]=w*c*s-u*e*s+u*f*q-x*c*q-w*f*l+x*e*l;i[6]=k*e*s-p*c*s-k*f*q+r*c*q+p*f*l-r*e*l;i[10]=p*u*s-k*w*s+k*x*q-r*u*q-p*x*l+r*w*l;i[14]=k*w*f-p*u*f-k*x*e+r*u*e+p*x*c-r*w*c;i[3]=v*e*s-w*d*s-v*f*q+x*d*q+w*f*o-x*e*o;i[7]=p*d*s-n*e*s+n*f*q-r*d*q-p*f*o+r*e*o;i[11]=n*w*s-p*v*s-n*x*q+r*v*q+p*x*o-r*w*o;i[15]=p*v*f-n*w*f+n*x*e-r*v*e-p*x*d+r*w*d;var g=r*i[0]+x*i[4]+f*i[8]+s*i[12];if(g===0){var h="Matrix4.getInverse(): can't invert matrix, determinant is 0";if(j||false){throw new Error(h)}else{console.warn(h)}this.identity();return this}this.multiplyScalar(1/g);return this};b.Matrix4.prototype.applyToVector3Array=function(){var c=new b.Vector3();return function(k,h,g){if(h===undefined){h=0}if(g===undefined){g=k.length}for(var f=0,e=h,d;f<g;f+=3,e+=3){c.x=k[e];c.y=k[e+1];c.z=k[e+2];c.applyMatrix4(this);k[e]=c.x;k[e+1]=c.y;k[e+2]=c.z}return k}};b.Matrix4.prototype.makeTranslation=function(c,e,d){this.set(1,0,0,c,0,1,0,e,0,0,1,d,0,0,0,1);return this};b.Matrix4.prototype.multiplyScalar=function(c){var d=this.elements;d[0]*=c;d[4]*=c;d[8]*=c;d[12]*=c;d[1]*=c;d[5]*=c;d[9]*=c;d[13]*=c;d[2]*=c;d[6]*=c;d[10]*=c;d[14]*=c;d[3]*=c;d[7]*=c;d[11]*=c;d[15]*=c;return this};b.Matrix4.prototype.set=function(p,o,m,k,h,g,f,e,c,s,r,q,n,l,j,i){var d=this.elements;d[0]=p;d[4]=o;d[8]=m;d[12]=k;d[1]=h;d[5]=g;d[9]=f;d[13]=e;d[2]=c;d[6]=s;d[10]=r;d[14]=q;d[3]=n;d[7]=l;d[11]=j;d[15]=i;return this};b.Matrix4.prototype.makeScale=function(c,e,d){this.set(c,0,0,0,0,e,0,0,0,0,d,0,0,0,0,1);return this};return b}(cornerstoneMath));var cornerstoneMath=(function(a){if(a===undefined){a={}}a.Plane=function(c,b){this.normal=(c!==undefined)?c:new a.Vector3(1,0,0);this.constant=(b!==undefined)?b:0};a.Plane.prototype={constructor:a.Plane,set:function(c,b){this.normal.copy(c);this.constant=b;return this},setComponents:function(b,e,d,c){this.normal.set(b,e,d);this.constant=c;return this},setFromNormalAndCoplanarPoint:function(c,b){this.normal.copy(c);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(){var c=new a.Vector3();var b=new a.Vector3();return function(e,d,g){var f=c.subVectors(g,d).cross(b.subVectors(e,d)).normalize();this.setFromNormalAndCoplanarPoint(f,e);return this}}(),copy:function(b){this.normal.copy(b.normal);
this.constant=b.constant;return this},normalize:function(){var b=1/this.normal.length();this.normal.multiplyScalar(b);this.constant*=b;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(b){return this.normal.dot(b)+this.constant},distanceToSphere:function(b){return this.distanceToPoint(b.center)-b.radius},projectPoint:function(b,c){return this.orthoPoint(b,c).sub(b).negate()},orthoPoint:function(c,e){var d=this.distanceToPoint(c);var b=e||new a.Vector3();return b.copy(this.normal).multiplyScalar(d)},isIntersectionLine:function(b){var d=this.distanceToPoint(b.start);var c=this.distanceToPoint(b.end);return(d<0&&c>0)||(c<0&&d>0)},intersectLine:function(){var b=new a.Vector3();return function(d,f){var c=f||new a.Vector3();var g=d.delta(b);var h=this.normal.dot(g);if(h===0){if(this.distanceToPoint(d.start)===0){return c.copy(d.start)}return undefined}var e=-(d.start.dot(this.normal)+this.constant)/h;if(e<0||e>1){return undefined}return c.copy(g).multiplyScalar(e).add(d.start)}}(),intersectPlane:function(b){var h=this.normal.clone().cross(b.normal);var i=new a.Vector3();var e={origin:i,direction:h};if(this.normal.clone().cross(b.normal).length<1e-10){e.direction=new a.Vector3();return e}var g=this.constant;var f=b.constant;var j=this.normal.clone().dot(b.normal);var d=-(g-f*j)/(1-j*j);var c=-(f-g*j)/(1-j*j);e.origin=this.normal.clone().multiplyScalar(d).add(b.normal.clone().multiplyScalar(c));return e},coplanarPoint:function(c){var b=c||new a.Vector3();return b.copy(this.normal).multiplyScalar(-this.constant)},translate:function(b){this.constant=this.constant-b.dot(this.normal);return this},equals:function(b){return b.normal.equals(this.normal)&&(b.constant==this.constant)},clone:function(){return new a.Plane().copy(this)}};return a}(cornerstoneMath));var cornerstoneMath=(function(d){if(d===undefined){d={}}function b(h){return{x:h.pageX,y:h.pageY}}function c(h,i){return{x:h.x-i.x,y:h.y-i.y}}function g(h){return{x:h.x,y:h.y}}function f(i,h){return Math.sqrt(e(i,h))}function e(j,i){var h=c(j,i);return h.x*h.x+h.y*h.y}function a(h,i){if(h.x<i.left||h.x>i.left+i.width||h.y<i.top||h.y>i.top+i.height){return false}return true}d.point={subtract:c,copy:g,pageToPoint:b,distance:f,distanceSquared:e,insideRect:a};return d}(cornerstoneMath));var cornerstoneMath=(function(b){if(b===undefined){b={}}b.Quaternion=function a(c,f,e,d){this.x=c||0;this.y=f||0;this.z=e||0;this.w=(d!==undefined)?d:1};b.Quaternion.prototype.setFromAxisAngle=function(e,f){var c=f/2,d=Math.sin(c);this.x=e.x*d;this.y=e.y*d;this.z=e.z*d;this.w=Math.cos(c);return this};b.Quaternion.prototype.multiplyQuaternions=function(l,k){var i=l.x,h=l.y,g=l.z,j=l.w;var e=k.x,d=k.y,c=k.z,f=k.w;this.x=i*f+j*e+h*c-g*d;this.y=h*f+j*d+g*e-i*c;this.z=g*f+j*c+i*d-h*e;this.w=j*f-i*e-h*d-g*c;return this};b.Quaternion.prototype.setFromRotationMatrix=function(g){var f=g.elements,k=f[0],j=f[4],i=f[8],e=f[1],d=f[5],c=f[9],o=f[2],n=f[6],l=f[10],h=k+d+l,p;if(h>0){p=0.5/Math.sqrt(h+1);this.w=0.25/p;this.x=(n-c)*p;this.y=(i-o)*p;this.z=(e-j)*p}else{if(k>d&&k>l){p=2*Math.sqrt(1+k-d-l);this.w=(n-c)/p;this.x=0.25*p;this.y=(j+e)/p;this.z=(i+o)/p}else{if(d>l){p=2*Math.sqrt(1+d-k-l);this.w=(i-o)/p;this.x=(j+e)/p;this.y=0.25*p;this.z=(c+n)/p}else{p=2*Math.sqrt(1+l-k-d);this.w=(e-j)/p;this.x=(i+o)/p;this.y=(c+n)/p;this.z=0.25*p}}}return this};return b}(cornerstoneMath));var cornerstoneMath=(function(c){if(c===undefined){c={}}function a(h){var j={start:{x:h.left,y:h.top},end:{x:h.left+h.width,y:h.top}};var f={start:{x:h.left+h.width,y:h.top},end:{x:h.left+h.width,y:h.top+h.height}};var e={start:{x:h.left+h.width,y:h.top+h.height},end:{x:h.left,y:h.top+h.height}};var i={start:{x:h.left,y:h.top+h.height},end:{x:h.left,y:h.top}};var g=[j,f,e,i];return g}function d(e,f,g){if(g===undefined){g=5}var h=c.lineSegment.distanceToPoint(f,e);return(h<g)}function b(g,e){var h=655535;var f=a(g);f.forEach(function(i){var j=c.lineSegment.distanceToPoint(i,e);if(j<h){h=j}});return h}c.rect={distanceToPoint:b};return c}(cornerstoneMath));