#!/bin/bash
#Ce script permet de lancer une application sur le serveur. Il récupère l'application dans la fonction de /SafeWorkSpace/Application/nomAppli/nomFonction 
#Paramètre 1: nom du créateur, 
#Paramètre 2: nom de l'utilisateur, 
#Paramètre 3: nom de l'application, 
#Parmaètre 4: num de la version de la tâche à exécuter, 
#Paramètre 5: nom de la fonction à exécuter,
#Paramètre 6 : nombre de requête à exécuter,
#Paramètre 7 : version du langage de programmation,
#Paramètre 8: les arguments à envoyer à la fonction. 
#Chaque argument devra être séparé par le caractère "§" 
#Exemple: ./LancementApplicationServeurProd JohnDash MathieuCollette TailleArtere 1.0.1 TailleParoi 3 2.7 img.jpg§24§32
#Il copiera la fonction TailleParoi de /Files/Sources/TJohnDash/TailleArtere/1.0.0/TailleParoi.py vers /SafeWorkSpace/Utilisateurs/MathieuCollette/3/TailleParoi.py
#Il copiera également tous les fichiers présent dans les datas de l'utilisateur vers le même dossier, dans cet exemple, /files/data/MathieuCollette/img.jpg vers /SafeWorkSpace/Utilisateurs/MathieuCollette/img.jpg

#Texte d'explication du fonctionnement de docker ???

homenoolibco="/home/noolibco"
paramsModifier="";
fonctionLancer="";
timeout=15s;
usrPath=$homenoolibco/SafeWorkSpace/Utilisateurs/$2/$6;

dockerPath="/home/noolibco/Library/ScriptsBash/Debian/docker-run-timeout";
if [ ! -d $homenoolibco/SafeWorkSpace/Utilisateurs/$2/$6 ]; then
 mkdir $homenoolibco/SafeWorkSpace/Utilisateurs/$2/$6;
fi #Pour NodeJs
if [ -f $homenoolibco/Files/Sources/$1/$3/$4/$5 ]; then
	cp $homenoolibco/Files/Sources/$1/$3/$4/$5 $homenoolibco/SafeWorkSpace/Utilisateurs/$2/$6/$5; # Pour NodeJs
	fichier=$5;
	extension=${fichier##*.}
	if [ $extension = "py" ]
	then
		version=$7;
		if [ $version = '3.4' ]
		then
			fonctionLancer=$dockerPath" 15s -v $usrPath:/app -w /app noolibco/python:3-alpine python3 "$fichier;
		elif [ $version = '2.7' ]
		then
			fonctionLancer=$dockerPath" 15s -v $usrPath:/app -w /app noolibco/python:2-alpine python "$fichier;
		else
			echo "Python version $fichier not supported"
		fi
	elif [ $extension = "m" ]
	then
		fonctionLancer=$dockerPath" 15s -v $usrPath:/app -v /usr/local/MATLAB/R2016:/usr/local/MATLAB/from-host --mac-address=00:0c:29:ff:d7:d6 -w /app ninjaben/matlab-support -nodesktop -nojvm -nosplash -nodisplay -r";
	elif [ $extension = "jar" ]
	then
		fonctionLancer=$dockerPath" 15s -v $usrPath:/app -w /app openjdk:alpine java -jar "$fichier;
	elif [ $extension = "php" ]
	then
		fonctionLancer=$dockerPath" 15s -v $usrPath:/app -w /app php:alpine php "$fichier;
	elif [ $extension = "js" ]
	then
		fonctionLancer=$dockerPath" 15s -v $usrPath:/app -w /app node:alpine node "$fichier;
	else
		echo "File extension $extension not supported."
	fi
	if [ $# -eq 8 ] # Nombre de paramètres
	then
		params=$(echo $8 | tr "§" "\n"); # Extrait les arguments
		if [ $extension = "m" ]
		then
			paramsModifier="inputs={";
		fi
		for param in $params
		do
		    if [ -f $homenoolibco"/Files/Data/"$2"/"$param ];
		        then
		            cp $homenoolibco"/Files/Data/"$2"/"$param $homenoolibco/SafeWorkSpace/Utilisateurs/$2/$6;    
			fi
			if [ $extension = "m" ]
			then
				paramsModifier=$paramsModifier",'$param'";
			else
				paramsModifier=$paramsModifier" "$param;
			fi
		done
	fi
	if [ $extension = "m" ]
	then
		paramsModifier=$paramsModifier"};run('$fichier');";
	fi	

$fonctionLancer $paramsModifier;
#EOF
fi
